{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport Head from \"next/head\";\nimport styled from \"styled-components\";\nvar Content = styled.div(_templateObject());\n\nvar LayoutCanvas = /*#__PURE__*/function (_Component) {\n  _inherits(LayoutCanvas, _Component);\n\n  var _super = _createSuper(LayoutCanvas);\n\n  function LayoutCanvas() {\n    _classCallCheck(this, LayoutCanvas);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LayoutCanvas, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, !this.props.title ? process.env.COMPANY : this.props.title + \" - \".concat(process.env.COMPANY))), __jsx(Content, null, this.props.children));\n    }\n  }]);\n\n  return LayoutCanvas;\n}(Component);\n\nexport { LayoutCanvas as default };","map":null,"metadata":{},"sourceType":"module"}