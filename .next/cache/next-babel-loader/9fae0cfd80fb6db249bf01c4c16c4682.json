{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _root;\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  background: rgba(0, 0, 0, 0.8);\\n  color: #fff;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  right: 0;\\n  height: 100%;\\n\\n  .icon {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n\\n    svg {\\n      width: 60px;\\n      height: 60px;\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background: #000;\\n  color: #fff;\\n  padding: 80px;\\n  max-width: 600px;\\n  height: 100%;\\n  z-index: 100;\\n  position: relative;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { MdAttachFile } from \"react-icons/md\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { TextField } from \"formik-material-ui\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nvar TextFieldWhite = withStyles({\n  root: (_root = {\n    \"& label\": {\n      color: \"#fff\",\n      borderBottomColor: \"#fff\"\n    },\n    \"& .MuiInput-underline:before\": {\n      borderBottomColor: \"#fff\"\n    },\n    \"& .MuiInput-underline:hover:before\": {\n      borderBottomColor: \"#fff\"\n    },\n    \"& label.Mui-focused\": {\n      color: \"#fff\"\n    },\n    \"& .MuiInput-input\": {\n      color: \"#fff\"\n    }\n  }, _defineProperty(_root, \"& label.Mui-focused\", {\n    color: \"#fff\"\n  }), _defineProperty(_root, \"& .MuiInput-underline:after\", {\n    borderBottomColor: \"#fff\"\n  }), _defineProperty(_root, \"& .MuiOutlinedInput-root\", {\n    \"& fieldset\": {\n      borderColor: \"#fff\"\n    },\n    \"&:hover fieldset\": {\n      borderColor: \"#fff\"\n    },\n    \"&.Mui-focused fieldset\": {\n      borderColor: \"#fff\"\n    }\n  }), _root)\n})(TextField);\nvar ContactForm = styled(Form)(_templateObject());\nvar Loading = styled.div(_templateObject2());\nexport default function ContactFormComp() {\n  var _useState = useState(null),\n      success = _useState[0],\n      setSuccess = _useState[1];\n\n  var handleSubmit = function handleSubmit(values, formikApi) {\n    var name = values.name,\n        email = values.email,\n        phone = values.phone,\n        message = values.message;\n    var data = {\n      name: name,\n      email: email,\n      phone: phone,\n      message: message\n    };\n    axios.post(\"/api/v1/contact\", data).then(function (data) {\n      setSuccess(true);\n      formikApi.setSubmitting(false);\n    })[\"catch\"](function (err) {\n      setSuccess(false);\n      formikApi.setSubmitting(false);\n    });\n  };\n\n  return __jsx(Formik, {\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      message: \"\"\n    },\n    onSubmit: handleSubmit,\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required(\"Required\"),\n      email: Yup.string().required(\"Required\"),\n      phone: Yup.string().required(\"Required\"),\n      message: Yup.string().required(\"Required\")\n    })\n  }, function (_ref) {\n    var _jsx;\n\n    var isSubmitting = _ref.isSubmitting,\n        dirty = _ref.dirty;\n    return __jsx(ContactForm, null, isSubmitting && __jsx(Loading, null, __jsx(\"div\", {\n      className: \"icon\"\n    }, __jsx(CircularProgress, null))), success && __jsx(React.Fragment, null, __jsx(Alert, {\n      severity: success === true ? \"success\" : \"error\"\n    }, success === true ? \"Thank you for contacting us!\" : \"Something went wrong please try again!\")), __jsx(\"h1\", null, \"Tell Us About Your Project\"), __jsx(Field, {\n      component: TextFieldWhite,\n      type: \"text\",\n      margin: \"normal\",\n      fullWidth: true,\n      label: \"Your name\",\n      name: \"name\"\n    }), __jsx(Field, {\n      component: TextFieldWhite,\n      type: \"email\",\n      margin: \"normal\",\n      fullWidth: true,\n      label: \"Your email\",\n      name: \"email\"\n    }), __jsx(Field, {\n      component: TextFieldWhite,\n      type: \"tel\",\n      margin: \"normal\",\n      fullWidth: true,\n      label: \"Your phone number\",\n      name: \"phone\"\n    }), __jsx(Field, {\n      component: TextFieldWhite,\n      type: \"text\",\n      margin: \"normal\",\n      fullWidth: true,\n      label: \"Message\",\n      name: \"message\"\n    }), __jsx(Grid, {\n      container: true\n    }, __jsx(Grid, {\n      item: true,\n      xs: true\n    }), __jsx(Grid, {\n      item: true\n    }, __jsx(Button, {\n      style: {\n        color: \"#fff\"\n      },\n      endIcon: __jsx(MdAttachFile, null)\n    }, \"Attach files\"))), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Button, (_jsx = {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: isSubmitting,\n      disableElevation: true\n    }, _defineProperty(_jsx, \"disabled\", !dirty), _defineProperty(_jsx, \"style\", {\n      background: \"#fff\",\n      color: \"#000\"\n    }), _jsx), \"Request Project\"));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}